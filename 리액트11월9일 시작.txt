1. Node.js 설치 https://nodejs.org/ko/download >>> lts 에서 windows installer 다운
2. Npm 은 node.js 사용시 자동으로 다운됨
3.설치확인은 npm 실행후 npm -v /  node -v 버전확인

4. Yarn : 설치 https://yarnpkg.com/en/docs/install#windows=stable
>>>download lnstaller 클릭


5. 리액트 프로젝트 설정 프로젝트명
 vsc >> 보기 >> 터미널 >> node -v 입력 >> yarn -v 입력 >>정상출력된거면 설치완료
오류시 컴퓨터 재부팅

6. 리액트 프로젝트 시작
터미널창 >> yarn create react-app 프로젝트명 >>기다렸다가 Happy hacking! done in 시간s 나오면 완료

7. 이제부터 제작하는 컨포넘트는 public 폴더의
index.html 의 div id="root" 에 있다 // index.js jsx 형식 으로 태그가 들어가기때문에 둘다 상관이있다


8. 터미널 창에서 다음과같이 입력  
cd 는 파일을 이동할때 쓰는 터미널 명령어
cd '프로젝트명'
yarn start   >> 를 입력시 브라우져에서 리액트 페이지가 localhost/ 로 열린다. 


------------------------여기까지 준비작업 이고 절대로 개발도중에 터미널을 종료하면 안됨----------------

항상 6번의 프로젝트를 먼저 생성하고 프로젝트 디렉터리를 이동하고 시작해야한다
요약) yarn create 프로젝트 >>  cd 프로젝트 >> yarn start 
또한 리액트 프로젝트는 서버 로컬에 저장하는거기때문에 집에서의 환경은 다를수 있으니 작성한 코드를 꼭 백업해서 사용할것

vsc 확장프로그램 설치 
esLint : 문법 검사도구 >> 보기 메뉴 문제 를 클릭하면 오류 메세지 출력 빨간색 표시줄은 치명적인 오류이기떄문에 반드시 수정
Reactjs code snippet : 리액트 코드 자동완성 rsc 엔터 (함수형 컴포넌트) rcc 엔터 (클래스형 컴포넌트)

 ------------------여기까진 위의 내용을 요약 또한 유용한 확장 프로그램 아래부턴 리액트의 문법------------------

컴포넌트는 = app 이라는 말이랑 비슷하다
태그의 시작은 대문자로 시작해야한다 
리액트에선 js 로끝나는게 컴포넌트 파일로 된다

사용자가 사용하는 컴포넌트 폴더는 src 폴더에 항상 있어야한다 
컴포넌트의 종류는 : ( 클래스형 컴포넌트 vs 함수형 컴포넌트 ) 두종류가 있다

아래의 예시는 리액트 src폴더의 index.js 의 내용이다
import React from 'react';   //선언) 리액트를 활용해서 컴포넌트 하겠다는 뜻 리액트 폴더안에 리엑트를 불러온다
import ReactDOM from 'react-dom';  // 리액트 돔을 사용하겠다
import 함수명 from ' ./파일경로 ';    // jsx로 작성한 함수형컴포넌트를 불러온다 일반적인경우 파일명과 함수명은 동일하게 작성하는게 좋다

ReactDOM.render(
  <React.StrictMode>
    <함수명 /> 	//파일경로에서 불러온 함수를 render 함수에 호출한다
  </React.StrictMode>,
  document.getElementById('root')
);

우선 함수형 컴포넌트에 대한 특징을 보자

App.js 			//파일명
import React from 'react';	//리엑트 함수를 사용한다
//함수형 컴포넌트는 일반적으로 파일이름과 똑같은 이름으로 함수를 정한다
function App(){
  return(	//실행할 결과를 함수로 리턴한다
    // 이제부터는 JSX 로 자바스크립트에서 사용하는 전용 html 문법
    // 태그가 두문장 이상 들어가게 되면 하나의 큰 태그로 묶어줘야한다
    //두문장 이상 태그를 묶을때 <>두문장 태그</> 이렇게 묶어줘도 되고 <div> 로 묶어줘도 된다
    // 또한 JSX 는 반드시 닫는 태그가 있어야한다 <input></input> 또한 <input action="" /> 이 가능하다

    <>	{/*주석표시*/} {/*태그를 하나로 묶는다*/}
      <h1>
        리액트 안녕!!
      </h1>
      <h2>
        잘 작동하니?
      </h2>
    </>
  );
}

//함수를 내보낼려면 선언되야하는 명령어 (모듈을 내보내는 명령어 export)
export default App


요약) 함수컴포넌트를 scr 폴더안에 작성하고 최종 출력은 index.js 에서 import 로 호출한다음 >> render 함수안에 함수를 호출한다

---------------------------------여기까지 함수형 컴포넌트의 기본개념 아래는 JSX의 스타일 적용 ---------


내부 스타일 적용
예)
 <p style={{
            color:'red',
            backgroundColor:'blue'
        }}>

<h1 style = {{
        fontSize:'50px', 
      }}>

 px 은 설명할수 있다
-------------------------------------인라인 스타일시트---------------------
 const style = {
    backgroundColor : 'green',
    color : 'white',
    border : '2px solid red',
  }
  const park = "잘 작동하니?";

<h2 style ={style}>
        {park}
      </h2>
-------------------------------------내부 스타일시트----------------------------------




강의내용 요약)
카페에서 "리액트" 강의 파일 다운받기

node.js
yarn

vsc에서 [보기] - [터미널]
리액트 프로젝트들을 저장할 루트 (react) 폴더에서
yarn create react-app 프로젝트명 
yarn start
src <- index.html <- index.js (조) <- App.js (부) 

추가할 내용은 App.js 로 추가

import React from 'react';
	function App(){
	return(
	<>
		JSX
	</>
		);
	}
export default App;




